package org.example.secure_joke_vault.model;


import jakarta.validation.constraints.NotBlank;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.index.Indexed;
import org.springframework.data.mongodb.core.mapping.Document;

import java.util.List;

/**
 * Represents a registered user in the system.
 * Stored as a document in the "users" MongoDB collection.
 * */
@Document(collection = "users")
@Data // Lombok: generates getters, setters, toString, equals, and hashCode
@NoArgsConstructor // Lombok: generates a no-args constructor
@AllArgsConstructor // Lombok: generates a constructor with all fields
public class User {
    /** Unique identifier generated by MongoDB */
    @Id
    private String id;

    /** Username (must be unique) */
    @Indexed(unique = true)
    @NotBlank(message = "Username is required")
    private String username;

    /** Encrypted password (stored using BCrypt) */
    @NotBlank(message = "Password is required")
    private String password;

    /** List of roles assigned to the user, e.g. ["USER"] or ["USER", "ADMIN"] */
    private List<Role> roles;


}
